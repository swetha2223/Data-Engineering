{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM8OZ1EXU70g35NC0ReJm/+"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NlQc2DGdjTJx","executionInfo":{"status":"ok","timestamp":1725344662376,"user_tz":-330,"elapsed":52031,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"cd358244-45a6-4615-a202-541562c38569"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pyspark\n","  Downloading pyspark-3.5.2.tar.gz (317.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m317.3/317.3 MB\u001b[0m \u001b[31m3.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: py4j==0.10.9.7 in /usr/local/lib/python3.10/dist-packages (from pyspark) (0.10.9.7)\n","Building wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.5.2-py2.py3-none-any.whl size=317812365 sha256=ae6ea138b8439b84e37634a07afd77cac7103d7032c450e7bc49e3207de521ad\n","  Stored in directory: /root/.cache/pip/wheels/34/34/bd/03944534c44b677cd5859f248090daa9fb27b3c8f8e5f49574\n","Successfully built pyspark\n","Installing collected packages: pyspark\n","Successfully installed pyspark-3.5.2\n"]}],"source":["! pip install pyspark"]},{"cell_type":"markdown","source":["Dataset Preparation"],"metadata":{"id":"Iy6iqlbiwwMs"}},{"cell_type":"code","source":["import pandas as pd\n","from datetime import datetime\n","\n","# Sample sales data\n","data = {\n","       \"TransactionID\": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n","       \"CustomerID\": [101, 102, 103, 101, 104, 102, 103, 104, 101, 105],\n","       \"ProductID\": [501, 502, 501, 503, 504, 502, 503, 504, 501, 505],\n","       \"Quantity\": [2, 1, 4, 3, 1, 2, 5, 1, 2, 1],\n","       \"Price\": [150.0, 250.0, 150.0, 300.0, 450.0, 250.0, 300.0, 450.0, 150.0, 550.0],\n","       \"Date\": [\n","           datetime(2024, 9, 1),\n","           datetime(2024, 9, 1),\n","           datetime(2024, 9, 2),\n","           datetime(2024, 9, 2),\n","           datetime(2024, 9, 3),\n","           datetime(2024, 9, 3),\n","           datetime(2024, 9, 4),\n","           datetime(2024, 9, 4),\n","           datetime(2024, 9, 5),\n","           datetime(2024, 9, 5)\n","       ]\n","   }\n"," # Create a DataFrame\n","df = pd.DataFrame(data)\n","\n","# Save the DataFrame to a CSV file\n","df.to_csv('sales_data.csv', index=False)\n","print(\"Sample sales dataset has been created and saved as 'sales_data.csv'.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ZNPlvMQkqPV","executionInfo":{"status":"ok","timestamp":1725345392298,"user_tz":-330,"elapsed":1634,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"8a0739ac-2bd5-40e7-cdb9-3990d03bf846"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Sample sales dataset has been created and saved as 'sales_data.csv'.\n"]}]},{"cell_type":"markdown","source":[" Load and Analyze the Dataset Using PySpark"],"metadata":{"id":"QYywzq0hw3Y0"}},{"cell_type":"code","source":["from pyspark.sql import SparkSession\n","\n","# Initialize a Spark session\n","spark = SparkSession.builder \\\n","    .appName(\"Sales Dataset Analysis\") \\\n","    .getOrCreate()\n","\n","\n","# Load the CSV file into a PySpark DataFrame\n","sales_df = spark.read.csv('sales_data.csv', header=True, inferSchema=True)\n","\n","# Show the first few rows to verify the data\n","sales_df.show(6)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dtEApQabmZX5","executionInfo":{"status":"ok","timestamp":1725345791493,"user_tz":-330,"elapsed":1020,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"33bc8aa7-c59b-4b88-8e99-d3e4594759e4"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["+-------------+----------+---------+--------+-----+----------+\n","|TransactionID|CustomerID|ProductID|Quantity|Price|      Date|\n","+-------------+----------+---------+--------+-----+----------+\n","|            1|       101|      501|       2|150.0|2024-09-01|\n","|            2|       102|      502|       1|250.0|2024-09-01|\n","|            3|       103|      501|       4|150.0|2024-09-02|\n","|            4|       101|      503|       3|300.0|2024-09-02|\n","|            5|       104|      504|       1|450.0|2024-09-03|\n","|            6|       102|      502|       2|250.0|2024-09-03|\n","+-------------+----------+---------+--------+-----+----------+\n","only showing top 6 rows\n","\n"]}]},{"cell_type":"code","source":["# Display the schema of the DataFrame\n","sales_df.printSchema()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ME1pXp-bnkB1","executionInfo":{"status":"ok","timestamp":1725345744453,"user_tz":-330,"elapsed":497,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"f52f5531-628e-4a53-9615-f3856d07921e"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["root\n"," |-- TransactionID: integer (nullable = true)\n"," |-- CustomerID: integer (nullable = true)\n"," |-- ProductID: integer (nullable = true)\n"," |-- Quantity: integer (nullable = true)\n"," |-- Price: double (nullable = true)\n"," |-- Date: date (nullable = true)\n","\n"]}]},{"cell_type":"code","source":["# Show the first 5 rows\n","sales_df.show(5)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YqkyLoc2p064","executionInfo":{"status":"ok","timestamp":1725346308656,"user_tz":-330,"elapsed":499,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"8b2befe3-bd03-44b4-f31c-a0c91dbfd5e4"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["+-------------+----------+---------+--------+-----+----------+\n","|TransactionID|CustomerID|ProductID|Quantity|Price|      Date|\n","+-------------+----------+---------+--------+-----+----------+\n","|            1|       101|      501|       2|150.0|2024-09-01|\n","|            2|       102|      502|       1|250.0|2024-09-01|\n","|            3|       103|      501|       4|150.0|2024-09-02|\n","|            4|       101|      503|       3|300.0|2024-09-02|\n","|            5|       104|      504|       1|450.0|2024-09-03|\n","+-------------+----------+---------+--------+-----+----------+\n","only showing top 5 rows\n","\n"]}]},{"cell_type":"code","source":["# Get summary statistics for numeric columns\n","sales_df.describe(['Quantity', 'Price']).show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qfQx5kKVqGH1","executionInfo":{"status":"ok","timestamp":1725346390701,"user_tz":-330,"elapsed":3801,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"c6228e31-4bc7-4f43-de95-b8a1cfa00775"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["+-------+-----------------+-----------------+\n","|summary|         Quantity|            Price|\n","+-------+-----------------+-----------------+\n","|  count|               10|               10|\n","|   mean|              2.2|            300.0|\n","| stddev|1.398411797560202|141.4213562373095|\n","|    min|                1|            150.0|\n","|    max|                5|            550.0|\n","+-------+-----------------+-----------------+\n","\n"]}]},{"cell_type":"code","source":["from pyspark.sql.functions import col\n","\n","# Add a new column 'TotalSales' by multiplying Quantity and Price\n","sales_df = sales_df.withColumn(\"TotalSales\", col(\"Quantity\") * col(\"Price\"))\n","\n","# Show the updated DataFrame with the new 'TotalSales' column\n","sales_df.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aiqmbIk0qxsa","executionInfo":{"status":"ok","timestamp":1725346558520,"user_tz":-330,"elapsed":512,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"0bf2eafc-42ee-497f-c05c-d87d222fb280"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["+-------------+----------+---------+--------+-----+----------+----------+\n","|TransactionID|CustomerID|ProductID|Quantity|Price|      Date|TotalSales|\n","+-------------+----------+---------+--------+-----+----------+----------+\n","|            1|       101|      501|       2|150.0|2024-09-01|     300.0|\n","|            2|       102|      502|       1|250.0|2024-09-01|     250.0|\n","|            3|       103|      501|       4|150.0|2024-09-02|     600.0|\n","|            4|       101|      503|       3|300.0|2024-09-02|     900.0|\n","|            5|       104|      504|       1|450.0|2024-09-03|     450.0|\n","|            6|       102|      502|       2|250.0|2024-09-03|     500.0|\n","|            7|       103|      503|       5|300.0|2024-09-04|    1500.0|\n","|            8|       104|      504|       1|450.0|2024-09-04|     450.0|\n","|            9|       101|      501|       2|150.0|2024-09-05|     300.0|\n","|           10|       105|      505|       1|550.0|2024-09-05|     550.0|\n","+-------------+----------+---------+--------+-----+----------+----------+\n","\n"]}]},{"cell_type":"code","source":["# Group by ProductID and calculate total sales per product\n","total_sales_per_product = sales_df.groupBy(\"ProductID\").sum(\"TotalSales\").alias(\"TotalSales\")\n","\n","total_sales_per_product.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j-oSDuo3rk41","executionInfo":{"status":"ok","timestamp":1725346773928,"user_tz":-330,"elapsed":1458,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"b0858698-9722-44c0-8d9b-58f799d56d34"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["+---------+---------------+\n","|ProductID|sum(TotalSales)|\n","+---------+---------------+\n","|      501|         1200.0|\n","|      504|          900.0|\n","|      502|          750.0|\n","|      505|          550.0|\n","|      503|         2400.0|\n","+---------+---------------+\n","\n"]}]},{"cell_type":"code","source":["# Find the product with the highest total sales\n","top_selling_product = total_sales_per_product.orderBy(col(\"sum(TotalSales)\").desc()).limit(1)\n","\n","\n","top_selling_product.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DvBXov_kr7KM","executionInfo":{"status":"ok","timestamp":1725346887773,"user_tz":-330,"elapsed":986,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"6cdffc98-47c7-4781-d026-45eb141c90fd"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["+---------+---------------+\n","|ProductID|sum(TotalSales)|\n","+---------+---------------+\n","|      503|         2400.0|\n","+---------+---------------+\n","\n"]}]},{"cell_type":"code","source":["# Group by Date and calculate total sales for each day\n","total_sales_by_date = sales_df.groupBy(\"Date\").sum(\"TotalSales\").alias(\"TotalSales\")\n","\n","\n","total_sales_by_date.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3s49pEsCsf31","executionInfo":{"status":"ok","timestamp":1725347011671,"user_tz":-330,"elapsed":929,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"393e1d07-b5b4-4273-8dc0-0f5ffd81a49a"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------+---------------+\n","|      Date|sum(TotalSales)|\n","+----------+---------------+\n","|2024-09-03|          950.0|\n","|2024-09-01|          550.0|\n","|2024-09-02|         1500.0|\n","|2024-09-05|          850.0|\n","|2024-09-04|         1950.0|\n","+----------+---------------+\n","\n"]}]},{"cell_type":"code","source":["# Filter transactions where the total sales value is greater than ₹500\n","high_value_transactions = sales_df.filter(col(\"TotalSales\") > 500)\n","\n","high_value_transactions.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LD_-P0mEtFVo","executionInfo":{"status":"ok","timestamp":1725347162348,"user_tz":-330,"elapsed":477,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"d55c1e4c-0f12-44dd-9db0-f7262cba352d"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["+-------------+----------+---------+--------+-----+----------+----------+\n","|TransactionID|CustomerID|ProductID|Quantity|Price|      Date|TotalSales|\n","+-------------+----------+---------+--------+-----+----------+----------+\n","|            3|       103|      501|       4|150.0|2024-09-02|     600.0|\n","|            4|       101|      503|       3|300.0|2024-09-02|     900.0|\n","|            7|       103|      503|       5|300.0|2024-09-04|    1500.0|\n","|           10|       105|      505|       1|550.0|2024-09-05|     550.0|\n","+-------------+----------+---------+--------+-----+----------+----------+\n","\n"]}]},{"cell_type":"code","source":["# Group by CustomerID and count the number of purchases for each customer\n","customer_purchase_count = sales_df.groupBy(\"CustomerID\").count()\n","\n","# Filter customers who have made more than one purchase\n","repeat_customers = customer_purchase_count.filter(col(\"count\") > 1)\n","\n","repeat_customers.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rXpdkoW_tq6V","executionInfo":{"status":"ok","timestamp":1725347322016,"user_tz":-330,"elapsed":961,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"a81003c4-1c87-4a4b-f7a7-039ba495dc23"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------+-----+\n","|CustomerID|count|\n","+----------+-----+\n","|       101|    3|\n","|       103|    2|\n","|       102|    2|\n","|       104|    2|\n","+----------+-----+\n","\n"]}]},{"cell_type":"code","source":["from pyspark.sql.functions import avg\n","\n","# Group by ProductID and calculate the average price per unit\n","avg_price_per_product = sales_df.groupBy(\"ProductID\").agg(avg(\"Price\").alias(\"AvgPrice\"))\n","\n","avg_price_per_product.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fMw10ooCuZer","executionInfo":{"status":"ok","timestamp":1725347511323,"user_tz":-330,"elapsed":1535,"user":{"displayName":"Swetha .R","userId":"11283228655930516066"}},"outputId":"ead7c62d-e15e-4337-f06d-153f65e252fb"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["+---------+--------+\n","|ProductID|AvgPrice|\n","+---------+--------+\n","|      501|   150.0|\n","|      504|   450.0|\n","|      502|   250.0|\n","|      505|   550.0|\n","|      503|   300.0|\n","+---------+--------+\n","\n"]}]}]}